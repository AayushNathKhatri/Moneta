@using DataModel.Model
@page "/debts"
<main>
    <div class="page flex-row">
        <div class="sidebar">
            <NavMenu />
        </div>
        <div class="content">
            <div class="flex-row">
                <h1>Debts</h1>


                <!-- Add Debt Button -->
                @if (!isFormVisible)
                {
                    <button class="btn btn-primary" @onclick="ShowAddForm">Add Debt</button>
                }
                else
                {
                    <button class="btn btn-secondary" @onclick="HideForm">Back</button>
                }
            </div>

            <!-- Add/Update Debt Form -->
            @if (isFormVisible)
            {
                <div class="form-group mt-4">
                    <h3>@(isUpdateMode ? "Update Debt" : "Add Debt")</h3>

                    <div class="form-group">
                        <label for="debtSource">Debt Source</label>
                        <input id="debtSource" type="text" class="form-control" @bind="Debt.DebtSource" placeholder="Enter debt source" required/>
                    </div>

                    <div class="form-group">
                        <label for="amount">Amount</label>
                        <input id="amount" type="number" class="form-control" @bind="Debt.DebtAmount" placeholder="Enter amount" required/>
                    </div>

                    <div class="form-group">
                        <label for="dueDate">Due Date</label>
                        <input id="dueDate" type="date" class="form-control" @bind="Debt.DebtDeuDate" required/>
                    </div>

                    <div class="form-group">
                        <label for="debtRemark">Debt Remark</label>
                        <input id="debtRemark" type="text" class="form-control" @bind="Debt.DebtRemark" placeholder="Enter remark" required/>
                    </div>

                    <div class="form-group">
                        <label for="debtStatus">Debt Status</label>
                        <select id="debtStatus" class="form-control" @bind="Debt.DebtStatus" required>
                            @foreach (var status in Enum.GetValues(typeof(DebtStatus)))
                            {
                                <option value="@status">@status</option>
                            }
                        </select>
                    </div>

                    @if (!string.IsNullOrEmpty(Message))
                    {
                        <div class="alert @AlertClass">@Message</div>
                    }

                    <button class="btn btn-primary" @onclick="SaveOrUpdateDebt">@((isUpdateMode ? "Update" : "Save"))</button>
                </div>
            }

            @if (!isFormVisible)
            {
                <div class="mt-4">
                    <h3>Debt List</h3>
                    <input id="search"
                           type="text"
                           placeholder="Search.."
                           @bind="searchInput"
                           class="search-input"
                           @oninput="OnSearchInputChange" />
                </div>
                <div>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Debt Source</th>
                                <th>Amount</th>
                                <th>
                                    Due Date
                                    <MudIconButton Icon="@Icons.Material.Filled.ArrowDropUp" Color="Color.Primary" Size="Size.Small" />
                                    <MudIconButton Icon="@Icons.Material.Filled.ArrowDropDown" Color="Color.Primary" Size="Size.Small" />
                                </th>
                                <th>Remark</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (filteredDebts.Any())
                            {
                                @foreach (var debt in filteredDebts)
                                {
                                    <tr>
                                        <td>@debt.DebtSource</td>
                                        <td>@debt.DebtAmount</td>
                                        <td>@debt.DebtDeuDate.ToString("yyyy-MM-dd")</td>
                                        <td>@debt.DebtRemark</td>
                                        <td>@debt.DebtStatus</td>
                                        <td>
                                            <button class="btn btn-warning" @onclick="() => ShowEditForm(debt)">Update</button>
                                            <button class="btn btn-success" @onclick="() => ClearDebt(debt.DebtId)">Clear</button>
                                            <button class="btn btn-danger" @onclick="() => DeleteDebt(debt.DebtId)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center">No Debts Found.</td>
                                </tr>
                            }
                            @if (!string.IsNullOrEmpty(Message))
                            {
                                <div class="alert @AlertClass">@Message</div>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</main>